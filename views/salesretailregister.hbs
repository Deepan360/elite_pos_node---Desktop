<!DOCTYPE html>
<html lang="en">
<head>
    {{>header}}
    <style>
        /* Styles for manufacturer form */
        #manufacturerform {
            display: block;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #8f8f8f;
            /* White background for the form */
            padding: 20px;
            z-index: 1000;
            /* Ensure it's above other elements */
            border-radius: 10px;
        }
        .editForm {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #8f8f8f;
            padding: 20px;
            z-index: 1000;
            border-radius: 10px;
        }
        .container {
            margin-left: 20%;
        }

        .updateManufacturer,
        .closeForm {
            background-color: rgba(50, 141, 168) !important;
            color: white !important;
            border: none !important;
            border-radius: 3px !important;
            width: 80px !important;
            height: 30px;
        }
.text-return{
    color: rgb(142, 62, 167);
}
        button {
            margin: 1px;
        }

        #message {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #ffffff;
            color: black;
            padding: 20px;
            z-index: 1000;
            size: 200px;
            font-weight: 700;
            justify-content: space-between;
            align-content: space-between;
            align-items: center;
            font-size: 14px;
            box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.3) !important;
            border-radius: 8px;
            overflow: hidden;
        }

        form input {
            margin: 2px;
        }

        form button {
            width: 100px !important;
            padding: 5px;
            margin: 5px;
        }

        .col input {
            width: 100%;
        }

        input[type=checkbox] {
            width: 100px;
            color: #8f8f8f !important;
        }

        .align-right-top {
            position: absolute;
            top: 0;
            right: 0;
            margin: 10px;
        }
    </style>
</head>

<body class="g-sidenav-show bg-gray-100">
    {{>sidebar}}
    <main class="main-content position-relative border-radius-lg">
        {{>navbar}}
        <div class="table-responsive container-fluid py-4">
            <div class="form-control card">
                <h3>Retailer Sales Register</h3>
                <div><a href="/salesretail"><i class="fa-solid fa-file-circle-plus fa-2x"></i></a></div>
                <div class="align-right-top">
                    <div id="filterDateDiv" class="mb-3">
                        <label for="fromDate">From Date:</label>
                        <input type="text" id="fromDate">
                        <label for="toDate">To Date:</label>
                        <input type="text" id="toDate">
                        <button class="btn btn-primary" id="filter-button">Filter</button>
                        <button class="btn btn-primary" id="clear-button">Clear</button>
                    </div>
                </div>
                <form action="/auth/customer" method="get">
                    <table id="customerTable" class="table-responsive justify-content-between align-items-end"
                        style="width:100% !important">
                        <thead>
                            <tr>
                                <th>Bill No</th>
                                <th>Bill Date</th>
                                <th>Customer</th>
                                <th>Mobile no</th>
                                <th>Payment Mode</th>
                                <th>Total Amount</th>
                                <th>Payment Status</th>
                                <th>Profit Amt</th>
                                <th>Payment</th>
                                <th class="action">Action</th>
                                <th>Return</th>
                                <th>Print</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
<tfoot>
    <tr id="totalAmountRow" style="display: none;">
        <td style="text-align: left; font-weight: bold; color: #34495E;">
            Total Amount: <span id="totalAmountDisplay"
                style="text-align: left; font-weight: bold; color: #34495E;">0.00</span>
        </td>
        <td style="text-align: left; font-weight: bold; color: #34495E;">
            Profit Amount: <span id="totalProfitDisplay"
                style="text-align: left; font-weight: bold; color: #34495E;">0.00</span>
        </td>
        <td style="text-align: left; font-weight: bold; color: #34495E;">
            Profit Rate: <span id="profitratedisplay"
                style="text-align: left; font-weight: bold; color: #34495E;">0.00%</span>
        </td>
    </tr>
</tfoot>
                    </table>
                </form>
            </div>
        </div>
        {{>footer}}
    </main>
    {{>color}}

    <script>

        document.getElementById("clear-button").addEventListener("click", function () {
            clearFilters();
            $('#totalAmountRow').hide();
            table.ajax.reload(); // Corrected to use table.ajax.reload() to refresh the DataTable
        });

        function clearFilters() {
            var table = document.getElementById("customerTable");
            var rows = table.getElementsByTagName("tr");

            for (var i = 1; i < rows.length; i++) {
                rows[i].style.display = "";
            }

            // Check if noDataRow is defined before accessing it
            var noDataRow = document.getElementById("noDataRow");
            if (noDataRow) {
                noDataRow.style.display = "none";
            }

            // Clear the values of the input fields
            document.getElementById("fromDate").value = "";
            document.getElementById("toDate").value = "";
        }

    $(document).ready(function () {
        // Filter by Date and Sum Total Amount
        document.getElementById("filter-button").addEventListener("click", function () {
            var fromDate = new Date(document.getElementById("fromDate").value);
            var toDate = new Date(document.getElementById("toDate").value);
            var totalAmountSum = 0;
            var totalProfitSum = 0; // Initialize profit sum

            table.rows().every(function () {
                var row = this.node();
                var billDateText = $(row).find("td").eq(1).text().trim();
                var totalAmountText = $(row).find("td").eq(5).text().trim();
                var profitRateText = $(row).find("td").eq(7).text().trim(); // Adjust index if needed
                var cellDate = moment(billDateText, "DD-MM-YYYY");

                // Log the data being processed
                console.log("Row Data - Date:", billDateText, "Total Amount:", totalAmountText, "Profit Rate:", profitRateText);

                if (cellDate.isSameOrAfter(moment(fromDate)) && cellDate.isSameOrBefore(moment(toDate))) {
                    $(row).show();

                    var parsedAmount = parseFloat(totalAmountText.replace(/[^0-9.-]+/g, ""));
                    var parsedProfit = parseFloat(profitRateText.replace(/[^0-9.-]+/g, ""));

                    if (!isNaN(parsedAmount)) {
                        totalAmountSum += parsedAmount;
                    } else {
                        console.warn("Invalid Total Amount:", totalAmountText);
                    }

                    if (!isNaN(parsedProfit)) {
                        totalProfitSum += parsedProfit;
                    } else {
                        console.warn("Invalid Profit Rate:", profitRateText);
                    }
                } else {
                    $(row).hide();
                }
            });

            // Calculate profit rate (as a percentage of total amount)
            var profitRate = totalAmountSum !== 0 ? (totalProfitSum / totalAmountSum) * 100 : 0;

            // Log the final calculated values
            console.log("Total Amount Sum:", totalAmountSum, "Total Profit Sum:", totalProfitSum, "Calculated Profit Rate:", profitRate);

            // Display the updated total amount, profit amount, and profit rate
            $('#totalAmountRow').show();
            $('#totalAmountDisplay').text(totalAmountSum.toFixed(2));
            $('#totalProfitDisplay').text(totalProfitSum.toFixed(2)); // Display total profit amount
            $('#profitratedisplay').text(profitRate.toFixed(2) + '%');
        });
    });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Wait for the DOM to be fully loaded
            var messageElement = document.getElementById('message');

            if (messageElement) {
                // If the message element exists
                setTimeout(function () {
                    // Set a timeout to hide the message after 2 seconds
                    messageElement.style.display = 'none';
                }, 1000); // 2000 milliseconds = 2 seconds
            }
        });
    </script>
    <script>
        $(document).ready(function () {
            // Hide all .div elements initially
            $('.div').hide();
            // Show the .add element initially
            $('.add').show();
            // Add change event listener to the dropdown with name="Id"
            $('.dropdown[name="Id"]').change(function () {
                var selectedOption = $(this).find('option:selected');
                // If a valid option is selected (not 'view details')
                if (selectedOption.val() && selectedOption.val() !== 'view details') {
                    $('.div').show();
                    $('.opener').hide();
                    $('.add').hide();
                } else {
                    $('.div').hide();
                    $('.add').show();
                }
            });
        });
        // Add event listener for the "addmanufacturer" button
        $(document).on('click', '#addmanufacturer', function () {
            $("#manufacturerform").show();
            $("#id").val('');
        });
        // Initialize DataTable with specified options
        var table = $("#customerTable").DataTable({
            dom: 'Bfrtip',
            buttons: ['copy', 'excel', 'pdf', 'csv'],
            paging: false,
            scrollY: '480px',
            scrollX: '100px',
            scrollCollapse: true,
            responsive: true,
            "bInfo": true,
            "bBorders": true,
            ajax: {
                url: '/auth/salesretailregister',
                type: 'GET',
                dataType: 'json',
                dataSrc: 'data'
            },
             order: [[0, 'desc']],
            columns: [
                { data: 'id' },
                {
                    data: 'saledate',
                    render: function (data) {
                        return data ? moment(data).format("DD-MM-YYYY") : 'null';
                    }
                },
                {
                    data: 'customername',
                    render: function (data) {
                        return data ? data : 'null';
                    }
                },
                {
                    data: 'mobileno',
                    render: function (data) {
                        return data ? data : 'null';
                    }
                },
                {
                    data: 'paymentmode',
                    render: function (data) {
                        return data ? data : 'null';
                    }
                },
                {
                    data: 'subtotal',
                    render: function (data) {
                        return data ? data : 'null';
                    }
                },
                 
                {
                    data: 'paymentmode',
                    render: function (data, type, row) {
                        // Check if the paymentmode is 'COD', mark as 'Unpaid'; otherwise 'Paid'
                        return data === 'COD' ? 'Unpaid' : 'Paid';
                    }
                },
                {
                    data: 'billmargin',
                    render: function (data) {
                        return data ? data : 'null';
                    }
                },
                 {
                    data: 'id',
                    render: function (data, type, row) {
                        // If payment mode is 'credit', show a credit card icon; otherwise, show the id
                        return row.paymentmode === 'credit' ? '<i class="fa-solid fa-credit-card text-danger fa-2x" type="button" data-id="' + data + '"></i>' : '<i class="fa-solid fa-clipboard-check text-success fa-2x"></i>';
                    }
                },
                {
                    data: 'id',
                    render: function (data) {
                        return '<i class="fa-solid fa-file-pen fa-2x text-warning" type="button" data-id="' + data + '"></i>';
                    }
                },
                 {
                    data: 'id',
                    render: function (data) {
                        return '<i class="fa-solid fa-reply-all fa-2x text-return" type="button" data-id="' + data + '"></i>';
                    }
                },
                {
                    data: 'id',
                    render: function (data) {
                        return '<i class="fa-solid fa-print fa-2x text-info" type="button" data-id="' + data + '"></i>';
                    }
                }
            ],
            "createdRow": function (row, data, dataIndex) {
                $(row).attr('data-id', data.id);
            }
        });
        // Handle click event for the edit icon
        $('#customerTable').on('click', 'i.fa-file-pen', function () {
            var salesId = $(this).data('id');
            console.log('sales ID:', salesId); // Debugging
            window.location.href = '/salesretail?id=' + salesId;
        }); 


        $('#customerTable').on('click', 'i.fa-reply-all', function () {
            var salesId = $(this).data('id');
            console.log('sales ID:', salesId); // Debugging
            window.location.href = '/salesreturnretail?id=' + salesId;
        }); 
        // Handle click event for the print icon
        $(document).on('click', '#customerTable i.fa-print', function () {
            var salesId = $(this).closest('tr').data('id');
            console.log('Sales ID:', salesId); // Debugging
            if (salesId !== undefined) {
                window.location.href = '/salesretailprint?id=' + salesId;
            } else {
                console.error('Sales ID is undefined.');
                // Handle the case where salesId is undefined
            }
        });

        // Show a message if there are no rows in the table
        if (table.rows().count() === 0) {
            $("#emptyMessage").show();
        }
    </script>


</body>

</html>
<script>
    $(function () {
        $("#fromDate").datepicker();
    });
</script>
<script>
    $(function () {
        $("#toDate").datepicker();
    });
</script>
<script>
    $("#closeForm").click(function () {
        $(".editForm").hide();
    });
</script>